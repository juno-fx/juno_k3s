---
- name: Ensure /opt/k3s
  ansible.builtin.file:
    path: /opt/k3s
    state: directory
    owner: root
    group: root
    mode: "0750"
  become: true

- name: When performing an airgap install, ensure the image dir exists
  become: true
  when: k3s_airgap_install | bool
  ansible.builtin.file:
    path: /var/lib/rancher/k3s/agent/images/
    state: directory
    owner: root
    group: root
    mode: "0750"

- name: Download the install script (http/s fetch)
  when: "'http://' in k3s_install_script_url or 'https://' in k3s_install_script_url"
  ansible.builtin.get_url:
    url: "{{ k3s_install_script_url }}"
    dest: /opt/k3s/install.sh
    mode: "0755"
    owner: root
    group: root
  become: true

- name: Check if the binary exists, get its checksum
  ansible.builtin.stat:
    path: /usr/local/bin/k3s
  register: k3s_binary_stat
  become: true
  failed_when: false

- name: When copying from a local file, checksum it
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ k3s_binary_url | regex_replace('^file://', '') }}"
  register: k3s_binary_local_stat
  when: "'file://' in k3s_binary_url"

- name: Download the k3s binary (https/s fetch)
  when: "'http://' in k3s_binary_url or 'https://' in k3s_binary_url"
  ansible.builtin.get_url:
    url: "{{ k3s_binary_url }}"
    dest: /usr/local/bin/k3s
    mode: "0755"
    owner: root
    group: root
  become: true

# ToDo: validate the checksum handling here. Something's odd, the copy task takes forever despite ansible checking it on the upstream already: https://github.com/ansible/ansible/blob/240d1a6afb43982f16acebef16778d17aab58160/lib/ansible/plugins/action/copy.py#L283
- name: Copy over the k3s binary (file:// k3s_binary_url)
  when:
    - "'file://' in k3s_binary_url"
    - k3s_binary_stat.stat.exists == false or
      (k3s_binary_stat.stat.exists and k3s_binary_local_stat.stat.checksum != k3s_binary_stat.stat.checksum)
  ansible.builtin.copy:
    src: "{{ k3s_binary_url | regex_replace('^file://', '') }}"
    dest: /usr/local/bin/k3s
    mode: "0755"
    owner: root
    group: root
  become: true

- name: Download the k3s images (https/s fetch)
  when:
    - "'http://' in k3s_images_url or 'https://' in k3s_images_url"
    - k3s_copy_images
  ansible.builtin.get_url:
    url: "{{ k3s_images_url }}"
    dest: "/var/lib/rancher/k3s/agent/images/{{ k3s_images_url | basename }}"
    mode: "0644"
    owner: root
    group: root
  become: true

- name: Copy over the k3s images (file:// k3s_images_url)
  when:
    - "'file://' in k3s_images_url"
    - k3s_copy_images
  ansible.builtin.copy:
    src: "{{ k3s_images_url | regex_replace('^file://', '') }}"
    dest: "/var/lib/rancher/k3s/agent/images/{{ k3s_images_url | basename }}"
    mode: "0644"
    owner: root
    group: root
  become: true

- name: Copy over the install script (file:// k3s_install_script_url)
  when: "'file://' in k3s_install_script_url"
  ansible.builtin.copy:
    src: "{{ k3s_install_script_url | regex_replace('^file://', '') }}"
    dest: /opt/k3s/install.sh
    mode: "0755"
    owner: root
    group: root
  become: true

- name: Ensure /etc/rancher/k3s
  ansible.builtin.file:
    path: /etc/rancher/k3s
    state: directory
    owner: root
    group: root
    mode: "0750"
  become: true

- name: Template in registries.yaml
  when: "k3s_registries_yaml != false"
  ansible.builtin.copy:
    content: "{{ k3s_registries_yaml }}"
    dest: /etc/rancher/k3s/registries.yaml
    owner: root
    group: root
    mode: "0644"
  become: true

- name: Check if k3s service exists and is running (control plane)
  ansible.builtin.set_fact:
    k3s_status: "{{ ansible_facts.services['k3s.service']['state'] | default('absent') }}"

- name: Check if k3s-agent service exists and is running (worker node)
  ansible.builtin.set_fact:
    k3s_status: "{{ ansible_facts.services['k3s-agent.service']['state'] | default('absent') }}"
  when: "k3s_status != 'running' and 'k3s-agent.service' in ansible_facts.services"

- name: Set initial empty flags list
  ansible.builtin.set_fact:
    flags: []

- name: Add bootstrap flags if this is the bootstrap node
  ansible.builtin.set_fact:
    flags: "{{ flags + ['--cluster-init'] }}"
  when: k3s_bootstrap_node | bool

- name: Add --disable traefik on all ctrlplane nodes
  when: k3s_control_plane_node | bool or k3s_bootstrap_node | bool
  ansible.builtin.set_fact:
    flags: "{{ flags + ['--disable', 'traefik'] }}"

- name: Add flannel backend flag if this is a server node
  ansible.builtin.set_fact:
    flags: "{{ flags + ['--flannel-backend=wireguard-native'] }}"
  when: k3s_control_plane_node | bool or k3s_bootstrap_node | bool

- name: Add join flags if this is not the bootstrap node
  ansible.builtin.set_fact:
    flags: "{{ flags + ['--server', 'https://' + k3s_bootstrap_node_ip + ':6443'] }}"
  when: not k3s_bootstrap_node | bool

- name: Add the token flag when defined
  ansible.builtin.set_fact:
    flags: "{{ flags + ['--token', k3s_join_token] }}"
  when: k3s_join_token is defined

- name: Add the node-label flags
  ansible.builtin.set_fact:
    flags: "{{ flags + (k3s_node_labels | map('regex_replace', '^(.*)$', '--node-label \\1') | list) }}"
  when: k3s_perform_node_labeling

- name: Install K3s with the constructed flags
  become: true
  ansible.builtin.command:
    cmd: /opt/k3s/install.sh {{ node_role }} {{ flags | join(' ') }}
  when: k3s_status != 'running' or k3s_force_reinstall
  environment:
    INSTALL_K3S_SKIP_DOWNLOAD: "true"
  vars:
    node_role: "{{ 'server' if k3s_control_plane_node or k3s_bootstrap_node else 'agent' }}"
